name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
        include:
          - coverage: true
            python-version: "3.13"

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
          cache-local-path: ${{ github.workspace }}/.cache/uv
          cache-dependency-glob: "uv.lock"

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Run test with pytest
        run: uv run pytest

      - name: Run linters
        run: |
          uv run pylint src test
          uv run ruff check

      - name: Generate coverage report
        if: "matrix.coverage"
        run: |
          uv run pytest --cov=src --cov=test --cov-report=xml

      - name: Upload coverage to Codecov
        if: "matrix.coverage"
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          files: ./coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
